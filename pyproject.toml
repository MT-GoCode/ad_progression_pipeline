[tool.poetry]
name = "ad-progression-pipeline"
version = "0.1.0"
description = ""
authors = ["Minh <tminh.us@gmail.com>"]
readme = "README.md"

[tool.poetry.dependencies]
python = ">=3.10,<3.12"
imbalanced-learn = "^0.12.3"
tensorflow = "2.17.0"
matplotlib = "^3.9.2"
numpy = "1.26.0"
pandas = "^2.2.2"
scikit-learn = "==1.0.2"
optuna = "^3.6.1"
pre-commit = "^3.8.0"
ruff = "^0.6.3"
mypy = "^1.11.2"
tensorflow-io-gcs-filesystem = "0.31.0"
prefect = "^2.20.4"
pyyaml = "^6.0.2"
scipy = "^1.14.1"
tbtrim = "^0.3.1"
tensorflow-cpu = "^2.17.0"
tensorflow-intel = "^2.12.0"
xgboost = "^2.1.1"
isort = "^5.13.2"


[tool.poetry.group.dev.dependencies]
ipykernel = "^6.29.5"

[tool.mypy]
ignore_missing_imports = true

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.ruff]
exclude = [
    "**/column_transformers.py",
    "*ad_progression_pipeline/components/ingestion/tasks/reshapers_old.py",
]

preview = true

line-length = 150

# Basic linting (PEP 8 compliance, etc.)
lint.select = [
    "ALL",      # General linting rules (does NOT select everything)
    "I001",     # Import sorting via isort
    # "B006",    # Detect mutable default arguments
    "B008",     # Enforce keyword-only arguments
    # "D",       # Ensure docstrings for classes, functions, methods
    "ANN",      # Type hints for function arguments and return values
    "F401",     # Unused imports
    "F841",     # Unused variables
    "E711",     # Use 'is' or 'is not' for None comparisons
    "E301",     # One blank line before functions and classes
    "E302",     # Two blank lines between top-level definitions
    "E303",     # Limit maximum consecutive blank lines (default: 2)
    "E305",     # Two blank lines after imports and class-level code
    "W391",     # Ensure no trailing blank line at the end of the file
    # "C812",     # Enforce trailing commas in multi-line function definitions
    "C416",     # Unnecessary list comprehension
    # "B301",     # Avoid unnecessary lambda expressions
    "F601"      # Avoid duplicate dictionary keys
]

fix = true

lint.ignore = [
    "TCH001", # type checking block import thing
    "D",        # docstring enforcement
    "PD015",
    "ANN401",
    "N806",
    "G004",     # logging statement f string
    "DTZ",      # datetime handling
    "PTH",
    "FA",
    "FIX",
    "TD",
    "F4",
    "PD",
    "PLC",
    "CPY",
    "PLR0914",
    "TCH002",
    "TRY"
]
